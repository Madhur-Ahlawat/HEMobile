import java.util.regex.Matcher
import java.util.regex.Pattern

buildscript {

    ext.kotlin_version = "1.7.20"
    ext.daggerHiltVersion = '2.42'
    ext.nav_version = "2.3.5"
    ext.jacocoVersion = '0.8.7'

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20'
        classpath("androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version")
        classpath "com.google.dagger:hilt-android-gradle-plugin:$daggerHiltVersion"
        classpath "org.jacoco:org.jacoco.core:$jacocoVersion"
        classpath 'com.google.gms:google-services:4.3.15'
    }
}

allprojects {
    repositories {
        google()
        flatDir {
            dirs 'libs'
        }
        mavenCentral()// Warning: this repository is going to shut down soon
    }
}

ext {
    flavor = getCurrentFlavor()
    if (flavor.isBlank() || flavor.isEmpty()) {
        flavor = "dev"
    } else if (flavor.contains("tstg")) {
        flavor = "test"
    }else if(flavor.contains("qapublic")){
        flavor = "qapublicenv"

    }
//        config = getProps('app/config/' + 'dev' + '.properties')
    config = getProps('app/config/' + flavor + '.properties')
}

def getProps(path) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}

def getCurrentFlavor() {
Gradle gradle = getGradle()
    def pattern = Pattern.compile("([A-Z][A-Za-z]+)(Release|Debug)")
    def flavor = ""

    gradle.getStartParameter().getTaskNames().any { name ->
        Matcher matcher = pattern.matcher(name)
        if (matcher.find()) {
            flavor = matcher.group(1).toLowerCase()
            return true
        }
    }

    return flavor
}

task clean(type: Delete) {
    delete rootProject.buildDir
}