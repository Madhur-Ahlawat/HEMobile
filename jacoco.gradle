apply plugin: 'jacoco'

jacoco {
    toolVersion = "$jacocoVersion"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDevDebugUnitTest']) {

    reports {
        xml.enabled = true
        html.enabled = true
        html.destination file("${project.buildDir}/coverage/report/html")
        xml.destination file("${project.buildDir}/coverage/report/xml")
    }

    def fileFilter = [
            '**/databinding/**/*.*',
            '**/androidx/databinding/*Binding.*',
            '**/BR.*',
            '**/R.*',
            '**/R$*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            'android/**/*.*',
            '**/databinding/*',
            '**/*$[0-9].*',
            '**/*Test*.*',
            '**/AutoValue_*.*',
            '**/*JavascriptBridge.class',
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewBinder*.*',
            '**/*$ViewInjector*.*',
            '**/Lambda$*.class',
            '**/Lambda.class',
            '**/*Lambda.class',
            '**/*Lambda*.class',
            '**/*$InjectAdapter.class',
            '**/*$ModuleAdapter.class',
            '**/*$ViewInjector*.class',
            '**/*_MembersInjector.class',
            '*/*_MembersInjector*.*',
            '**/*_*Factory*.*',
            '*/*Component*.*',
            '**/*Module*.*',
            'hilt_aggregated_deps',
            'dagger/hilt/internal/aggregatedroot/codegen'
    ]

    def javaTree = fileTree(dir: "$project.buildDir/intermediates/javac/devDebug/classes", excludes: fileFilter)

    def kotlinTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/devDebug", excludes: fileFilter)

    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([javaTree, kotlinTree])
    executionData.from = files("${project.projectDir}/jacoco.exec")

//    executionData.from = fileTree(dir: "$buildDir", includes: [
//            "jacoco/testDevDebugUnitTest.exec"
//             ,"outputs/unit_test_code_coverage/devDebugUnitTest/testDevDebugUnitTest.exec"
//    ])

}